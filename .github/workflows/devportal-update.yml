name: Update Devportal Documentation

env:
  DEV_PORTAL_SCRIPT_PATH: ".github/workflows/scripts/devportal-update"

on:
  push:
    paths:
      - "README.md"
      - "docs/**"
    branches:
      - main
  pull_request:
    paths:
      - "README.md"
      - "docs/**"

permissions: read-all

jobs:
  update-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # You can specify the Python version you prefer

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML
          chmod -R +x ${{ env.DEV_PORTAL_SCRIPT_PATH }}/process_docs.py

      # Step 1: Clone the Devportal Repository
      - name: Clone Devportal Repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          repository: rsksmart/devportal
          path: devportal
          token: ${{ secrets.DEVPORTAL_DOCS_UPDATE_TOKEN }}

      # Step 2: Create the local branch
      - name: Create branch for PR to update Devportal
        env:
          GITHUB_TOKEN: ${{ secrets.DEVPORTAL_DOCS_UPDATE_TOKEN }}
        run: |
          TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
          BRANCH_NAME="update-from-rskj-${TIMESTAMP}"
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
          git checkout -b ${BRANCH_NAME} || git checkout ${BRANCH_NAME}
          cd ..

      # Step 3: Transform Each File and Copy to Devportal Repository
      - name: Transform Files for Devportal
        run: |
          mkdir -p transformed
          
          # Process other documentation files
          python ${{ env.DEV_PORTAL_SCRIPT_PATH }}/process_docs.py ${{ env.DEV_PORTAL_SCRIPT_PATH }}/doc_config.yaml

          # Copy processed files to devportal directory
          cp -R transformed/* devportal/docs/

      # Step 4: Commit and Push Changes to Devportal Repository
      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.DEVPORTAL_DOCS_UPDATE_TOKEN }}
        run: |
          cd devportal
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs
          git commit -m "Automated update from rskj repository"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/rsksmart/devportal.git
          echo "Pushing branch: ${{ env.BRANCH_NAME }}"
          git branch -a  # List all branches
          git push -u origin ${{ env.BRANCH_NAME }}

      # Step 5: Create a Pull Request in the Devportal Repository
      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.DEVPORTAL_DOCS_UPDATE_TOKEN }}
        run: |
          cd devportal
          curl -L -X POST -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.DEVPORTAL_DOCS_UPDATE_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/rsksmart/devportal/pulls \
          -d "{\"title\":\"Automated update of documentation for RSKj node - ${BRANCH_NAME}\",\"body\":\"This PR updates the Devportal documentation with the latest changes from the original repository.\",\"head\":\"${BRANCH_NAME}\",\"base\":\"main\"}"