comment

// CONTRACT CODE

pragma solidity ^0.8.24;

contract TstorageDynamicReentrancyContext {
    bool reentrant = false;

    constructor() {
    }

    event OK();
    event ERROR(string, uint256);

    function opcodeUndoesAll(uint256 opcodeSelector) external {
        bytes memory data = abi.encodeWithSignature("opcodeUndoesAll(uint256)", opcodeSelector);
        uint256 fail;
        uint256 valueLoadedFromFEBefore;
        uint256 valueLoadedFromFFBefore;
        uint256 valueLoadedFromFEAfter;
        uint256 valueLoadedFromFFAfter;

        assembly {
            let reentrantValue := sload(reentrant.slot)
            switch reentrantValue
            case 0 {
                sstore(reentrant.slot, true)

                tstore(0xFE, 0x100)
                tstore(0xFF, 0x101)
                valueLoadedFromFEBefore := tload(0xFE)
                valueLoadedFromFFBefore := tload(0xFF)

                mstore(0, 2)
                switch opcodeSelector
                case 0 {
                    fail := call(gas(), address(), 0, add(data, 0x20), mload(data), 0, 0)
                }
                case 1 {
                    fail := call(gas(), address(), 0, add(data, 0x20), mload(data), 0, 0)
                }
                valueLoadedFromFEAfter := tload(0xFE)
                valueLoadedFromFFAfter := tload(0xFF)

            }
            default {
                tstore(0xFE, 0x201)
                tstore(0xFE, 0x202)
                tstore(0xFF, 0x201)
                tstore(0xFF, 0x202)
                switch opcodeSelector
                case 0 {
                    revert(0, 0)
                }
                case 1 {
                    invalid()
                }
            }
        }
        checkReturnValueExpected(fail, 'Checking result callee execution fails', 0);
        checkReturnValueExpected(valueLoadedFromFEBefore, 'Checking value from tload FE before', 0x100);
        checkReturnValueExpected(valueLoadedFromFEAfter, 'Checking value from tload FE after', 0x100);
        checkReturnValueExpected(valueLoadedFromFFBefore, 'Checking value from tload FF before', 0x101);
        checkReturnValueExpected(valueLoadedFromFFAfter, 'Checking value from tload FF after', 0x101);
    }

    function checkReturnValueExpected(uint256 valueReceived, string memory message, uint256 expectedValue) private {
        if( valueReceived == expectedValue){
            emit OK();
        } else {
            emit ERROR(message, valueReceived);
        }
    }
}

// CONTRACT BYTECODE

TstorageDynamicReentrancyContext: 60806040525f805f6101000a81548160ff021916908315150217905550348015610027575f80fd5b506104e4806100355f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c80630b35f95c1461002d575b5f80fd5b610047600480360381019061004291906102f3565b610049565b005b5f8160405160240161005b919061032d565b6040516020818303038152906040527f0b35f95c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090505f805f805f8054805f81146101225761020160fe5d61020260fe5d61020160ff5d61020260ff5d885f8114610116576001811461011a5761011c565b5f80fd5bfe5b50610183565b60015f5561010060fe5d61010160ff5d60fe5c955060ff5c945060025f52885f8114610155576001811461016857610177565b5f808a5160208c015f305af19750610177565b5f808a5160208c015f305af197505b5060fe5c935060ff5c92505b50506101a885604051806060016040528060268152602001610421602691395f610245565b6101cd8460405180606001604052806023815260200161046960239139610100610245565b6101f28260405180606001604052806022815260200161044760229139610100610245565b6102178360405180606001604052806023815260200161048c60239139610101610245565b61023c816040518060600160405280602281526020016103ff60229139610101610245565b50505050505050565b80830361027d577fd48fe2800bace8f5ca2450feacbd6efc681b1cd0115019bb49fa529b6171bf6760405160405180910390a16102b7565b7fc9e730d5b570f89e168eb8c3d29f8c396b957e540af248c95c9519ac47c2c69f82846040516102ae9291906103d0565b60405180910390a15b505050565b5f80fd5b5f819050919050565b6102d2816102c0565b81146102dc575f80fd5b50565b5f813590506102ed816102c9565b92915050565b5f60208284031215610308576103076102bc565b5b5f610315848285016102df565b91505092915050565b610327816102c0565b82525050565b5f6020820190506103405f83018461031e565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561037d578082015181840152602081019050610362565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6103a282610346565b6103ac8185610350565b93506103bc818560208601610360565b6103c581610388565b840191505092915050565b5f6040820190508181035f8301526103e88185610398565b90506103f7602083018461031e565b939250505056fe436865636b696e672076616c75652066726f6d20746c6f6164204646206166746572436865636b696e6720726573756c742063616c6c656520657865637574696f6e206661696c73436865636b696e672076616c75652066726f6d20746c6f6164204645206166746572436865636b696e672076616c75652066726f6d20746c6f6164204645206265666f7265436865636b696e672076616c75652066726f6d20746c6f6164204646206265666f7265a264697066735822122014d79ec53d86680fbb087e64cebf51f7c1e829ea7683527c492cf3316530d26964736f6c63430008180033

0b35f95c: opcodeUndoesAll(uint256)

end

# Create and fund new account
account_new acc1 10000000

# Create transaction to deploy TstorageDynamicReentrancyContext contract
transaction_build txTstorageDynamicReentrancyContextContract
    sender acc1
    receiverAddress 00
    value 0
    data 60806040525f805f6101000a81548160ff021916908315150217905550348015610027575f80fd5b506104e4806100355f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c80630b35f95c1461002d575b5f80fd5b610047600480360381019061004291906102f3565b610049565b005b5f8160405160240161005b919061032d565b6040516020818303038152906040527f0b35f95c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090505f805f805f8054805f81146101225761020160fe5d61020260fe5d61020160ff5d61020260ff5d885f8114610116576001811461011a5761011c565b5f80fd5bfe5b50610183565b60015f5561010060fe5d61010160ff5d60fe5c955060ff5c945060025f52885f8114610155576001811461016857610177565b5f808a5160208c015f305af19750610177565b5f808a5160208c015f305af197505b5060fe5c935060ff5c92505b50506101a885604051806060016040528060268152602001610421602691395f610245565b6101cd8460405180606001604052806023815260200161046960239139610100610245565b6101f28260405180606001604052806022815260200161044760229139610100610245565b6102178360405180606001604052806023815260200161048c60239139610101610245565b61023c816040518060600160405280602281526020016103ff60229139610101610245565b50505050505050565b80830361027d577fd48fe2800bace8f5ca2450feacbd6efc681b1cd0115019bb49fa529b6171bf6760405160405180910390a16102b7565b7fc9e730d5b570f89e168eb8c3d29f8c396b957e540af248c95c9519ac47c2c69f82846040516102ae9291906103d0565b60405180910390a15b505050565b5f80fd5b5f819050919050565b6102d2816102c0565b81146102dc575f80fd5b50565b5f813590506102ed816102c9565b92915050565b5f60208284031215610308576103076102bc565b5b5f610315848285016102df565b91505092915050565b610327816102c0565b82525050565b5f6020820190506103405f83018461031e565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561037d578082015181840152602081019050610362565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6103a282610346565b6103ac8185610350565b93506103bc818560208601610360565b6103c581610388565b840191505092915050565b5f6040820190508181035f8301526103e88185610398565b90506103f7602083018461031e565b939250505056fe436865636b696e672076616c75652066726f6d20746c6f6164204646206166746572436865636b696e6720726573756c742063616c6c656520657865637574696f6e206661696c73436865636b696e672076616c75652066726f6d20746c6f6164204645206166746572436865636b696e672076616c75652066726f6d20746c6f6164204645206265666f7265436865636b696e672076616c75652066726f6d20746c6f6164204646206265666f7265a264697066735822122014d79ec53d86680fbb087e64cebf51f7c1e829ea7683527c492cf3316530d26964736f6c63430008180033
    gas 1000000
    build

# Create block to hold txTstorageDynamicReentrancyContextContract transaction
block_build b01
    parent g00
    transactions txTstorageDynamicReentrancyContextContract
    gasLimit 1200000
    build

# Connect block
block_connect b01

# Check b01 is best block
assert_best b01

# Create transaction to execute txTestReentrantContextRevert transaction
transaction_build txTestReentrantContextRevert
    sender acc1
    nonce 1
    contract txTstorageDynamicReentrancyContextContract
    value 0
    data 0b35f95c0000000000000000000000000000000000000000000000000000000000000000
    gas 300000
    build

# Create block to hold txTestReentrantContextRevert transaction
block_build b02
    parent b01
    transactions txTestReentrantContextRevert
    gasLimit 350000
    build

# Connect block
block_connect b02

# Check b02 is best block
assert_best b02

# Create transaction to execute txTestReentrantContextInvalid transaction
transaction_build txTestReentrantContextInvalid transaction
    sender acc1
    nonce 2
    contract txTstorageDynamicReentrancyContextContract
    value 0
    data 0b35f95c0000000000000000000000000000000000000000000000000000000000000001
    gas 1000000
    build

# Create block to hold txTestReentrantContextInvalid transaction
block_build b03
    parent b02
    transactions txTestReentrantContextInvalid
    gasLimit 1200000
    build

# Connect block
block_connect b03

# Check b03 is best block
assert_best b03